{"ast":null,"code":"import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { exportElement } from './export-element';\n/**\n * @hidden\n */\n\nexport function provideSaveGridPDF(savePDF) {\n  return function (grid, pdfExportOptions, callback, data, columns) {\n    if (pdfExportOptions === void 0) {\n      pdfExportOptions = {};\n    }\n\n    return saveGridPDF(savePDF, grid, pdfExportOptions, callback, data, columns);\n  };\n}\n\nfunction saveGridPDF(savePDF, grid, pdfExportOptions, callback, data, columns) {\n  if (pdfExportOptions === void 0) {\n    pdfExportOptions = {};\n  }\n\n  renderGrid();\n  var gridOuterWrapper;\n  var gridInnerWrapper;\n  var finalContainer;\n\n  function renderGrid() {\n    gridOuterWrapper = document.createElement('div');\n    gridOuterWrapper.setAttribute('style', 'position:absolute; left: -5000px; top: 0px;');\n    gridInnerWrapper = document.createElement('div');\n    gridOuterWrapper.appendChild(gridInnerWrapper);\n    document.body.appendChild(gridOuterWrapper);\n    ReactDOM.render(prepareRawGridForExport(), gridInnerWrapper, onGridRendered);\n  }\n\n  function onGridRendered() {\n    savePDF(prepareFinalElementForExport(), pdfExportOptions, cleanUpAndInvokeCallback);\n  }\n\n  function cleanUpAndInvokeCallback() {\n    document.body.removeChild(gridOuterWrapper);\n    document.body.removeChild(finalContainer);\n    gridOuterWrapper = finalContainer = undefined;\n\n    if (callback) {\n      callback();\n    }\n  }\n\n  function prepareFinalElementForExport() {\n    /* Ultimatelly, there is no need for double DOM-copying of the grid.\n    The one in this method is a copied Angular implementation\n    that has been plugged almost seemlessly. */\n    finalContainer = document.createElement('div');\n    finalContainer.className = 'k-grid-pdf-export-element';\n    var result = exportElement(gridInnerWrapper);\n    finalContainer.appendChild(result);\n    document.body.appendChild(finalContainer);\n    return result;\n  }\n\n  function prepareRawGridForExport() {\n    var customDataProps = data && {\n      data: data,\n      total: data.length,\n      pageSize: data.length,\n      skip: 0\n    }; // A custom width is needed because otherwise when all pages are exported,\n    // the \"hidden\" PDF grid will be visible.\n\n    var customStyleProp = {\n      style: Object.assign({}, grid.props.style, {\n        width: '1000px'\n      })\n    };\n    var customProps = Object.assign({}, customDataProps, customStyleProp);\n\n    if (columns && columns.length > 0) {\n      var notColumnChildren = getGridNotColumnChildren(grid);\n      return React.cloneElement(grid, customProps, columns.concat(notColumnChildren));\n    } else {\n      return React.cloneElement(grid, customProps);\n    }\n  }\n}\n\nfunction getGridNotColumnChildren(grid) {\n  return React.Children.toArray(grid.props.children).filter(function (child) {\n    return child && child.type.displayName !== 'KendoReactGridColumn';\n  });\n}","map":{"version":3,"sources":["C:/Users/vinay/react1/react-js-coding-test-level-1/node_modules/@progress/kendo-react-pdf/dist/es/grid/provideSaveGridPDF.js"],"names":["ReactDOM","React","exportElement","provideSaveGridPDF","savePDF","grid","pdfExportOptions","callback","data","columns","saveGridPDF","renderGrid","gridOuterWrapper","gridInnerWrapper","finalContainer","document","createElement","setAttribute","appendChild","body","render","prepareRawGridForExport","onGridRendered","prepareFinalElementForExport","cleanUpAndInvokeCallback","removeChild","undefined","className","result","customDataProps","total","length","pageSize","skip","customStyleProp","style","Object","assign","props","width","customProps","notColumnChildren","getGridNotColumnChildren","cloneElement","concat","Children","toArray","children","filter","child","type","displayName"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,WAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA;AACA;AACA;;AACA,OAAO,SAASC,kBAAT,CAA4BC,OAA5B,EAAqC;AACxC,SAAO,UAAUC,IAAV,EAAgBC,gBAAhB,EAAkCC,QAAlC,EAA4CC,IAA5C,EAAkDC,OAAlD,EAA2D;AAC9D,QAAIH,gBAAgB,KAAK,KAAK,CAA9B,EAAiC;AAAEA,MAAAA,gBAAgB,GAAG,EAAnB;AAAwB;;AAC3D,WAAOI,WAAW,CAACN,OAAD,EAAUC,IAAV,EAAgBC,gBAAhB,EAAkCC,QAAlC,EAA4CC,IAA5C,EAAkDC,OAAlD,CAAlB;AACH,GAHD;AAIH;;AACD,SAASC,WAAT,CAAqBN,OAArB,EAA8BC,IAA9B,EAAoCC,gBAApC,EAAsDC,QAAtD,EAAgEC,IAAhE,EAAsEC,OAAtE,EAA+E;AAC3E,MAAIH,gBAAgB,KAAK,KAAK,CAA9B,EAAiC;AAAEA,IAAAA,gBAAgB,GAAG,EAAnB;AAAwB;;AAC3DK,EAAAA,UAAU;AACV,MAAIC,gBAAJ;AACA,MAAIC,gBAAJ;AACA,MAAIC,cAAJ;;AACA,WAASH,UAAT,GAAsB;AAClBC,IAAAA,gBAAgB,GAAGG,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAnB;AACAJ,IAAAA,gBAAgB,CAACK,YAAjB,CAA8B,OAA9B,EAAuC,6CAAvC;AACAJ,IAAAA,gBAAgB,GAAGE,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAnB;AACAJ,IAAAA,gBAAgB,CAACM,WAAjB,CAA6BL,gBAA7B;AACAE,IAAAA,QAAQ,CAACI,IAAT,CAAcD,WAAd,CAA0BN,gBAA1B;AACAZ,IAAAA,QAAQ,CAACoB,MAAT,CAAgBC,uBAAuB,EAAvC,EAA2CR,gBAA3C,EAA6DS,cAA7D;AACH;;AACD,WAASA,cAAT,GAA0B;AACtBlB,IAAAA,OAAO,CAACmB,4BAA4B,EAA7B,EAAiCjB,gBAAjC,EAAmDkB,wBAAnD,CAAP;AACH;;AACD,WAASA,wBAAT,GAAoC;AAChCT,IAAAA,QAAQ,CAACI,IAAT,CAAcM,WAAd,CAA0Bb,gBAA1B;AACAG,IAAAA,QAAQ,CAACI,IAAT,CAAcM,WAAd,CAA0BX,cAA1B;AACAF,IAAAA,gBAAgB,GAAGE,cAAc,GAAGY,SAApC;;AACA,QAAInB,QAAJ,EAAc;AACVA,MAAAA,QAAQ;AACX;AACJ;;AACD,WAASgB,4BAAT,GAAwC;AACpC;AACR;AACA;AACQT,IAAAA,cAAc,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAjB;AACAF,IAAAA,cAAc,CAACa,SAAf,GAA2B,2BAA3B;AACA,QAAIC,MAAM,GAAG1B,aAAa,CAACW,gBAAD,CAA1B;AACAC,IAAAA,cAAc,CAACI,WAAf,CAA2BU,MAA3B;AACAb,IAAAA,QAAQ,CAACI,IAAT,CAAcD,WAAd,CAA0BJ,cAA1B;AACA,WAAOc,MAAP;AACH;;AACD,WAASP,uBAAT,GAAmC;AAC/B,QAAIQ,eAAe,GAAGrB,IAAI,IAAI;AAAEA,MAAAA,IAAI,EAAEA,IAAR;AAAcsB,MAAAA,KAAK,EAAEtB,IAAI,CAACuB,MAA1B;AAAkCC,MAAAA,QAAQ,EAAExB,IAAI,CAACuB,MAAjD;AAAyDE,MAAAA,IAAI,EAAE;AAA/D,KAA9B,CAD+B,CAE/B;AACA;;AACA,QAAIC,eAAe,GAAG;AAAEC,MAAAA,KAAK,EAAEC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBhC,IAAI,CAACiC,KAAL,CAAWH,KAA7B,EAAoC;AAAEI,QAAAA,KAAK,EAAE;AAAT,OAApC;AAAT,KAAtB;AACA,QAAIC,WAAW,GAAGJ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,eAAlB,EAAmCK,eAAnC,CAAlB;;AACA,QAAIzB,OAAO,IAAIA,OAAO,CAACsB,MAAR,GAAiB,CAAhC,EAAmC;AAC/B,UAAIU,iBAAiB,GAAGC,wBAAwB,CAACrC,IAAD,CAAhD;AACA,aAAOJ,KAAK,CAAC0C,YAAN,CAAmBtC,IAAnB,EAAyBmC,WAAzB,EAAsC/B,OAAO,CAACmC,MAAR,CAAeH,iBAAf,CAAtC,CAAP;AACH,KAHD,MAIK;AACD,aAAOxC,KAAK,CAAC0C,YAAN,CAAmBtC,IAAnB,EAAyBmC,WAAzB,CAAP;AACH;AACJ;AACJ;;AACD,SAASE,wBAAT,CAAkCrC,IAAlC,EAAwC;AACpC,SAAOJ,KAAK,CAAC4C,QAAN,CACFC,OADE,CACMzC,IAAI,CAACiC,KAAL,CAAWS,QADjB,EAEFC,MAFE,CAEK,UAAUC,KAAV,EAAiB;AAAE,WAAOA,KAAK,IACvCA,KAAK,CAACC,IAAN,CAAWC,WAAX,KAA2B,sBADA;AACyB,GAHjD,CAAP;AAIH","sourcesContent":["import * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport { exportElement } from './export-element';\n/**\n * @hidden\n */\nexport function provideSaveGridPDF(savePDF) {\n    return function (grid, pdfExportOptions, callback, data, columns) {\n        if (pdfExportOptions === void 0) { pdfExportOptions = {}; }\n        return saveGridPDF(savePDF, grid, pdfExportOptions, callback, data, columns);\n    };\n}\nfunction saveGridPDF(savePDF, grid, pdfExportOptions, callback, data, columns) {\n    if (pdfExportOptions === void 0) { pdfExportOptions = {}; }\n    renderGrid();\n    var gridOuterWrapper;\n    var gridInnerWrapper;\n    var finalContainer;\n    function renderGrid() {\n        gridOuterWrapper = document.createElement('div');\n        gridOuterWrapper.setAttribute('style', 'position:absolute; left: -5000px; top: 0px;');\n        gridInnerWrapper = document.createElement('div');\n        gridOuterWrapper.appendChild(gridInnerWrapper);\n        document.body.appendChild(gridOuterWrapper);\n        ReactDOM.render(prepareRawGridForExport(), gridInnerWrapper, onGridRendered);\n    }\n    function onGridRendered() {\n        savePDF(prepareFinalElementForExport(), pdfExportOptions, cleanUpAndInvokeCallback);\n    }\n    function cleanUpAndInvokeCallback() {\n        document.body.removeChild(gridOuterWrapper);\n        document.body.removeChild(finalContainer);\n        gridOuterWrapper = finalContainer = undefined;\n        if (callback) {\n            callback();\n        }\n    }\n    function prepareFinalElementForExport() {\n        /* Ultimatelly, there is no need for double DOM-copying of the grid.\n        The one in this method is a copied Angular implementation\n        that has been plugged almost seemlessly. */\n        finalContainer = document.createElement('div');\n        finalContainer.className = 'k-grid-pdf-export-element';\n        var result = exportElement(gridInnerWrapper);\n        finalContainer.appendChild(result);\n        document.body.appendChild(finalContainer);\n        return result;\n    }\n    function prepareRawGridForExport() {\n        var customDataProps = data && { data: data, total: data.length, pageSize: data.length, skip: 0 };\n        // A custom width is needed because otherwise when all pages are exported,\n        // the \"hidden\" PDF grid will be visible.\n        var customStyleProp = { style: Object.assign({}, grid.props.style, { width: '1000px' }) };\n        var customProps = Object.assign({}, customDataProps, customStyleProp);\n        if (columns && columns.length > 0) {\n            var notColumnChildren = getGridNotColumnChildren(grid);\n            return React.cloneElement(grid, customProps, columns.concat(notColumnChildren));\n        }\n        else {\n            return React.cloneElement(grid, customProps);\n        }\n    }\n}\nfunction getGridNotColumnChildren(grid) {\n    return React.Children\n        .toArray(grid.props.children)\n        .filter(function (child) { return child &&\n        child.type.displayName !== 'KendoReactGridColumn'; });\n}\n"]},"metadata":{},"sourceType":"module"}